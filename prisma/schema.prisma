// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plan {
  FREE
  PRO
}

model User {
  id              String          @id @default(cuid())
  externalId      String?         @unique
  quotaLimit      Int
  plan            Plan            @default(FREE)
  email           String          @unique
  apiKey          String          @unique @default(cuid())
  discordId       String?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  EventCategories EventCategory[]
  Event           Event[]
  Quota           Quota[]

  @@index([email, apiKey])
}

model EventCategory {
  id    String  @id @default(cuid())
  name  String
  color Int
  emoji String?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  events     Event[]

  @@unique([name, userId])
}

enum deliveryStatus {
  PENDING
  DELIVERED
  FAILED
}

model Event {
  id               String         @id @default(cuid())
  formattedMessage String
  user             User           @relation(fields: [userId], references: [id])
  userId           String
  name             String
  fields           Json
  deliveryStatus   deliveryStatus @default(PENDING)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  EventCategory    EventCategory? @relation(fields: [eventCategoryId], references: [id])
  eventCategoryId  String?

  @@index([createdAt])
}

model Quota {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
  year Int
  month Int
  count Int @default(0)
  updatedAt DateTime @updatedAt
}
